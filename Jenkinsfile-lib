pipeline {
    agent any

    environment {
        PYTHON_VERSION = '3.12'
    }

    stages {
        stage('Setup Python Environment') {
            steps {
                script {
                    // Install Poetry
                    sh 'pip install --user poetry'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    // Install dependencies using Poetry
                    sh 'poetry install'
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run tests using Poetry
                    sh 'poetry run pytest dynaface-lib/tests'
                }
            }
        }

        stage('Build Package') {
            steps {
                script {
                    // Build the package with Poetry
                    sh 'poetry build'
                }
            }
        }

        stage('Archive Artifacts') {
            steps {
                archiveArtifacts artifacts: 'dynaface-lib/dist/*.whl', fingerprint: true
            }
        }
    }

    post {
        always {
            script {
                // Clean up Poetry's cache (optional)
                sh 'poetry cache clear pypi --all'
            }
        }
    }
}
